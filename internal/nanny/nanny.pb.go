// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: internal/nanny/nanny.proto

package nanny

import (
	config "github.com/ServiceWeaver/weaver-gke/internal/config"
	protos "github.com/ServiceWeaver/weaver/runtime/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ApplicationDistributionRequest is a request to the distributor to start a
// set of versions for a given application in their deployment locations (e.g.,
// a cloud region), and gradually shift traffic to them.
type ApplicationDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName  string                        `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Requests []*VersionDistributionRequest `protobuf:"bytes,2,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *ApplicationDistributionRequest) Reset() {
	*x = ApplicationDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDistributionRequest) ProtoMessage() {}

func (x *ApplicationDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDistributionRequest.ProtoReflect.Descriptor instead.
func (*ApplicationDistributionRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationDistributionRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationDistributionRequest) GetRequests() []*VersionDistributionRequest {
	if x != nil {
		return x.Requests
	}
	return nil
}

// VersionDistributionRequest is a request to the distributor to start a new
// application version in its deployment location.
type VersionDistributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deployment information for the new application version.
	Config *config.GKEConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Rollout information for the new application version.
	TargetFn *TargetFn `protobuf:"bytes,2,opt,name=target_fn,json=targetFn,proto3" json:"target_fn,omitempty"`
	// Unique identifier that captures the order in which the application version
	// was submitted for rollout at the controller.
	SubmissionId int64 `protobuf:"varint,3,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
}

func (x *VersionDistributionRequest) Reset() {
	*x = VersionDistributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionDistributionRequest) ProtoMessage() {}

func (x *VersionDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionDistributionRequest.ProtoReflect.Descriptor instead.
func (*VersionDistributionRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{1}
}

func (x *VersionDistributionRequest) GetConfig() *config.GKEConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *VersionDistributionRequest) GetTargetFn() *TargetFn {
	if x != nil {
		return x.TargetFn
	}
	return nil
}

func (x *VersionDistributionRequest) GetSubmissionId() int64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

// ApplicationCleanupRequest is a request to the distributor to clean up a set
// of versions for a given application.
type ApplicationCleanupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName  string   `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ApplicationCleanupRequest) Reset() {
	*x = ApplicationCleanupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCleanupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCleanupRequest) ProtoMessage() {}

func (x *ApplicationCleanupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCleanupRequest.ProtoReflect.Descriptor instead.
func (*ApplicationCleanupRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{2}
}

func (x *ApplicationCleanupRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationCleanupRequest) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

// GetListenerAddressRequest is a request to the manager to get an address
// a listener in a given colocation group should listen on.
type GetListenerAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *protos.ColocationGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Listener string                  `protobuf:"bytes,2,opt,name=listener,proto3" json:"listener,omitempty"`
	Config   *config.GKEConfig       `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *GetListenerAddressRequest) Reset() {
	*x = GetListenerAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListenerAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListenerAddressRequest) ProtoMessage() {}

func (x *GetListenerAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListenerAddressRequest.ProtoReflect.Descriptor instead.
func (*GetListenerAddressRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{3}
}

func (x *GetListenerAddressRequest) GetGroup() *protos.ColocationGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *GetListenerAddressRequest) GetListener() string {
	if x != nil {
		return x.Listener
	}
	return ""
}

func (x *GetListenerAddressRequest) GetConfig() *config.GKEConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// ExportListenerRequest is a request to the manager to export a listener.
type ExportListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group    *protos.ColocationGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Listener *protos.Listener        `protobuf:"bytes,2,opt,name=listener,proto3" json:"listener,omitempty"`
	Config   *config.GKEConfig       `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ExportListenerRequest) Reset() {
	*x = ExportListenerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportListenerRequest) ProtoMessage() {}

func (x *ExportListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportListenerRequest.ProtoReflect.Descriptor instead.
func (*ExportListenerRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{4}
}

func (x *ExportListenerRequest) GetGroup() *protos.ColocationGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *ExportListenerRequest) GetListener() *protos.Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *ExportListenerRequest) GetConfig() *config.GKEConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// ColocationGroupStartEequest is a request to the manager to start
// a colocation group for a given application version.
type ColocationGroupStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  *protos.ColocationGroup `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Config *config.GKEConfig       `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ColocationGroupStartRequest) Reset() {
	*x = ColocationGroupStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColocationGroupStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColocationGroupStartRequest) ProtoMessage() {}

func (x *ColocationGroupStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColocationGroupStartRequest.ProtoReflect.Descriptor instead.
func (*ColocationGroupStartRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{5}
}

func (x *ColocationGroupStartRequest) GetGroup() *protos.ColocationGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *ColocationGroupStartRequest) GetConfig() *config.GKEConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// ApplicationDeploymentRequest is a request to the manager to deploy a set of
// versions for a given application.
type ApplicationDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName  string              `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Versions []*config.GKEConfig `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ApplicationDeploymentRequest) Reset() {
	*x = ApplicationDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDeploymentRequest) ProtoMessage() {}

func (x *ApplicationDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDeploymentRequest.ProtoReflect.Descriptor instead.
func (*ApplicationDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationDeploymentRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationDeploymentRequest) GetVersions() []*config.GKEConfig {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ApplicationStopRequest is a request to the manager to stop a set of versions
// for a given application.
type ApplicationStopRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName  string   `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ApplicationStopRequest) Reset() {
	*x = ApplicationStopRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStopRequest) ProtoMessage() {}

func (x *ApplicationStopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStopRequest.ProtoReflect.Descriptor instead.
func (*ApplicationStopRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationStopRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationStopRequest) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ApplicationDeleteRequest is a request to the manager to delete a set of
// versions for a given application.
type ApplicationDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName  string   `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ApplicationDeleteRequest) Reset() {
	*x = ApplicationDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDeleteRequest) ProtoMessage() {}

func (x *ApplicationDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDeleteRequest.ProtoReflect.Descriptor instead.
func (*ApplicationDeleteRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationDeleteRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *ApplicationDeleteRequest) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ReplicaToRegister is a request to the manager to register the given Service Weaver
// replica, running in the given babysitter.
type ReplicaToRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodName           string                    `protobuf:"bytes,1,opt,name=pod_name,json=podName,proto3" json:"pod_name,omitempty"`                               // Replica pod name (e.g., main-012345-6789)
	BabysitterAddress string                    `protobuf:"bytes,2,opt,name=babysitter_address,json=babysitterAddress,proto3" json:"babysitter_address,omitempty"` // e.g., host:1234
	Replica           *protos.ReplicaToRegister `protobuf:"bytes,3,opt,name=replica,proto3" json:"replica,omitempty"`
}

func (x *ReplicaToRegister) Reset() {
	*x = ReplicaToRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicaToRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicaToRegister) ProtoMessage() {}

func (x *ReplicaToRegister) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicaToRegister.ProtoReflect.Descriptor instead.
func (*ReplicaToRegister) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{9}
}

func (x *ReplicaToRegister) GetPodName() string {
	if x != nil {
		return x.PodName
	}
	return ""
}

func (x *ReplicaToRegister) GetBabysitterAddress() string {
	if x != nil {
		return x.BabysitterAddress
	}
	return ""
}

func (x *ReplicaToRegister) GetReplica() *protos.ReplicaToRegister {
	if x != nil {
		return x.Replica
	}
	return nil
}

// ApplicationStateAtDistributorRequest is a request to the distributor to get
// the latest state for a given application.
type ApplicationStateAtDistributorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppName string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
}

func (x *ApplicationStateAtDistributorRequest) Reset() {
	*x = ApplicationStateAtDistributorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStateAtDistributorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStateAtDistributorRequest) ProtoMessage() {}

func (x *ApplicationStateAtDistributorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStateAtDistributorRequest.ProtoReflect.Descriptor instead.
func (*ApplicationStateAtDistributorRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{10}
}

func (x *ApplicationStateAtDistributorRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

// ApplicationStateAtDistributor contains the latest state for a given
// application at a particular distributor.
type ApplicationStateAtDistributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionState    []*VersionStateAtDistributor `protobuf:"bytes,1,rep,name=version_state,json=versionState,proto3" json:"version_state,omitempty"`
	DeletedVersions []string                     `protobuf:"bytes,2,rep,name=deleted_versions,json=deletedVersions,proto3" json:"deleted_versions,omitempty"`
}

func (x *ApplicationStateAtDistributor) Reset() {
	*x = ApplicationStateAtDistributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStateAtDistributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStateAtDistributor) ProtoMessage() {}

func (x *ApplicationStateAtDistributor) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStateAtDistributor.ProtoReflect.Descriptor instead.
func (*ApplicationStateAtDistributor) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationStateAtDistributor) GetVersionState() []*VersionStateAtDistributor {
	if x != nil {
		return x.VersionState
	}
	return nil
}

func (x *ApplicationStateAtDistributor) GetDeletedVersions() []string {
	if x != nil {
		return x.DeletedVersions
	}
	return nil
}

// VersionStateAtDistributor stores the state of an application version at a
// particular distributor.
type VersionStateAtDistributor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionId string `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	// Last traffic fraction that was applied.
	LastTrafficFractionApplied float32 `protobuf:"fixed32,2,opt,name=last_traffic_fraction_applied,json=lastTrafficFractionApplied,proto3" json:"last_traffic_fraction_applied,omitempty"`
	// Whether the rollout has successfully completed. Note that a rollout is not
	// necessarily completed when the last traffic fraction was applied (e.g.,
	// the local gateway might have transient failures and the distributor has to
	// reapply).
	RolloutCompleted bool `protobuf:"varint,3,opt,name=rollout_completed,json=rolloutCompleted,proto3" json:"rollout_completed,omitempty"`
	// Whether the main group is deployed.
	IsDeployed bool `protobuf:"varint,4,opt,name=is_deployed,json=isDeployed,proto3" json:"is_deployed,omitempty"`
	// All known groups for this application version.
	Groups *GroupState `protobuf:"bytes,5,opt,name=groups,proto3" json:"groups,omitempty"`
}

func (x *VersionStateAtDistributor) Reset() {
	*x = VersionStateAtDistributor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionStateAtDistributor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionStateAtDistributor) ProtoMessage() {}

func (x *VersionStateAtDistributor) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionStateAtDistributor.ProtoReflect.Descriptor instead.
func (*VersionStateAtDistributor) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{12}
}

func (x *VersionStateAtDistributor) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *VersionStateAtDistributor) GetLastTrafficFractionApplied() float32 {
	if x != nil {
		return x.LastTrafficFractionApplied
	}
	return 0
}

func (x *VersionStateAtDistributor) GetRolloutCompleted() bool {
	if x != nil {
		return x.RolloutCompleted
	}
	return false
}

func (x *VersionStateAtDistributor) GetIsDeployed() bool {
	if x != nil {
		return x.IsDeployed
	}
	return false
}

func (x *VersionStateAtDistributor) GetGroups() *GroupState {
	if x != nil {
		return x.Groups
	}
	return nil
}

// GroupStateRequest is a request to receive the state of groups for the given
// application version or a collection of applications and their versions.
type GroupStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application name and version.
	//
	// If the application name is non-empty, the request is for retrieving
	// group state only for the given application; otherwise, the request is
	// for retrieving group state for all active applications.
	// If the application version is non-empty, the request is for retrieving
	// group state only for a particular version of an application; otherwise,
	// the request is for retrieving group state for all versions of an
	// application (or a collection of applications).
	// It is illegal to specify the version and not the application name.
	AppName   string `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	VersionId string `protobuf:"bytes,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
}

func (x *GroupStateRequest) Reset() {
	*x = GroupStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupStateRequest) ProtoMessage() {}

func (x *GroupStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupStateRequest.ProtoReflect.Descriptor instead.
func (*GroupStateRequest) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{13}
}

func (x *GroupStateRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *GroupStateRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

// GroupState stores the colocation group state for an application version or a
// collection of applications and their versions.
type GroupState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groups []*GroupState_Group `protobuf:"bytes,3,rep,name=groups,proto3" json:"groups,omitempty"`
	// Errors encountered collecting the group state.
	// Note that the group data may be partially populated even if there were
	// collection errors.
	Errors []string `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GroupState) Reset() {
	*x = GroupState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupState) ProtoMessage() {}

func (x *GroupState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupState.ProtoReflect.Descriptor instead.
func (*GroupState) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{14}
}

func (x *GroupState) GetGroups() []*GroupState_Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GroupState) GetErrors() []string {
	if x != nil {
		return x.Errors
	}
	return nil
}

// TargetFn is a target function that controls the traffic rollout for a given
// application version inside a deployment location (e.g., a cloud region).
//
// Each entry F_i in TargetFn stores a traffic fraction that should be assigned
// to the application version, as well as the duration of that traffic
// assignment.
//
// Traffic assignment starts with entry F_0. Once the traffic fraction
// in F_i has been applied for longer than the duration specified in
// F_i, the traffic fraction in the entry F_(i+1) is applied.  This
// process continues until all entries in the array have been exhausted,
// at which point the traffic fraction of 1.0 is applied and the application
// version is considered "installed".
//
// Note that the traffic fraction is considered "applied" the moment it is
// successfully assigned to the application version. Failed fraction assignments
// don't count toward the fraction duration; instead, the earlier fraction
// remains applied.  This means that some traffic fractions may be applied
// for significantly longer than the specified duration (e.g., cluster
// becomes unreachable); the only guarantee we provide is that a given
// fraction will never be applied for less than a specified duration.
type TargetFn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fractions []*FractionSpec `protobuf:"bytes,1,rep,name=fractions,proto3" json:"fractions,omitempty"`
}

func (x *TargetFn) Reset() {
	*x = TargetFn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TargetFn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TargetFn) ProtoMessage() {}

func (x *TargetFn) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TargetFn.ProtoReflect.Descriptor instead.
func (*TargetFn) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{15}
}

func (x *TargetFn) GetFractions() []*FractionSpec {
	if x != nil {
		return x.Fractions
	}
	return nil
}

// FractionSpec represents one stage in the TargetFn that should be applied to
// a given application version.
//
// It stores the traffic fraction that should be assigned to the application
// version, as well as the duration of that traffic assignment. Once the traffic
// fraction has been applied for longer than the specified duration, the target
// function moves to the next rollout stage (see comments above TargetFn).
type FractionSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Minimum duration the traffic fraction should be applied.
	Duration *durationpb.Duration `protobuf:"bytes,1,opt,name=duration,proto3" json:"duration,omitempty"`
	// Traffic fraction in the range [0, 1] to be sent to the application version.
	TrafficFraction float32 `protobuf:"fixed32,2,opt,name=traffic_fraction,json=trafficFraction,proto3" json:"traffic_fraction,omitempty"`
}

func (x *FractionSpec) Reset() {
	*x = FractionSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FractionSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FractionSpec) ProtoMessage() {}

func (x *FractionSpec) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FractionSpec.ProtoReflect.Descriptor instead.
func (*FractionSpec) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{16}
}

func (x *FractionSpec) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *FractionSpec) GetTrafficFraction() float32 {
	if x != nil {
		return x.TrafficFraction
	}
	return 0
}

// Schedule represents a target function being applied.
//
// A target function is a sequence of traffic fractions and the duration for
// which they should be applied. A schedule represents the actual application of
// the traffic fractions, as we progress from one traffic fraction to the next.
type Schedule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The target function being applied.
	//
	// TODO(mwhittaker): Right now, the code is inconsistent about whether a
	// target function ends with a fraction of 1.0. Try to clean that up.
	TargetFn *TargetFn `protobuf:"bytes,1,opt,name=target_fn,json=targetFn,proto3" json:"target_fn,omitempty"`
	// The index of the current traffic fraction in target_fn. After the final
	// traffic fraction has been applied for its specified duration, index is
	// incremented to be equal to the length of the number of traffic fractions.
	// This signals that the target function has been fully applied.
	Index int64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	// Total duration the current traffic fraction has been applied.
	AppliedDuration *durationpb.Duration `protobuf:"bytes,3,opt,name=applied_duration,json=appliedDuration,proto3" json:"applied_duration,omitempty"`
}

func (x *Schedule) Reset() {
	*x = Schedule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Schedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Schedule) ProtoMessage() {}

func (x *Schedule) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Schedule.ProtoReflect.Descriptor instead.
func (*Schedule) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{17}
}

func (x *Schedule) GetTargetFn() *TargetFn {
	if x != nil {
		return x.TargetFn
	}
	return nil
}

func (x *Schedule) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Schedule) GetAppliedDuration() *durationpb.Duration {
	if x != nil {
		return x.AppliedDuration
	}
	return nil
}

// TrafficAssignment contains a traffic assignment keyed by hostname.
type TrafficAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostAssignment map[string]*HostTrafficAssignment `protobuf:"bytes,1,rep,name=host_assignment,json=hostAssignment,proto3" json:"host_assignment,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TrafficAssignment) Reset() {
	*x = TrafficAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficAssignment) ProtoMessage() {}

func (x *TrafficAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficAssignment.ProtoReflect.Descriptor instead.
func (*TrafficAssignment) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{18}
}

func (x *TrafficAssignment) GetHostAssignment() map[string]*HostTrafficAssignment {
	if x != nil {
		return x.HostAssignment
	}
	return nil
}

// HostTrafficAssignment contains the traffic assignment for a given hostname.
type HostTrafficAssignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allocs []*TrafficAllocation `protobuf:"bytes,1,rep,name=allocs,proto3" json:"allocs,omitempty"`
}

func (x *HostTrafficAssignment) Reset() {
	*x = HostTrafficAssignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostTrafficAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostTrafficAssignment) ProtoMessage() {}

func (x *HostTrafficAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostTrafficAssignment.ProtoReflect.Descriptor instead.
func (*HostTrafficAssignment) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{19}
}

func (x *HostTrafficAssignment) GetAllocs() []*TrafficAllocation {
	if x != nil {
		return x.Allocs
	}
	return nil
}

// TrafficAllocation contains a traffic allocation. It is the finest granularity
// in terms of traffic assignment.
type TrafficAllocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location        string           `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`                                        // location (e.g., a cloud region)
	AppName         string           `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`                           // name of the application
	VersionId       string           `protobuf:"bytes,3,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`                     // application version id
	TrafficFraction float32          `protobuf:"fixed32,4,opt,name=traffic_fraction,json=trafficFraction,proto3" json:"traffic_fraction,omitempty"` // traffic fraction allocated for version id
	Listener        *protos.Listener `protobuf:"bytes,5,opt,name=listener,proto3" json:"listener,omitempty"`                                        // network listener
}

func (x *TrafficAllocation) Reset() {
	*x = TrafficAllocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficAllocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficAllocation) ProtoMessage() {}

func (x *TrafficAllocation) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficAllocation.ProtoReflect.Descriptor instead.
func (*TrafficAllocation) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{20}
}

func (x *TrafficAllocation) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *TrafficAllocation) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *TrafficAllocation) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *TrafficAllocation) GetTrafficFraction() float32 {
	if x != nil {
		return x.TrafficFraction
	}
	return 0
}

func (x *TrafficAllocation) GetListener() *protos.Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

// Group stores information about an application version group.
type GroupState_Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Replicas   []*GroupState_Group_Replica `protobuf:"bytes,2,rep,name=replicas,proto3" json:"replicas,omitempty"`     // All known group replicas.
	Components []string                    `protobuf:"bytes,3,rep,name=components,proto3" json:"components,omitempty"` // Active components hosted by the group.
	Listeners  []*protos.Listener          `protobuf:"bytes,4,rep,name=listeners,proto3" json:"listeners,omitempty"`   // Listeners hosted by the group.
}

func (x *GroupState_Group) Reset() {
	*x = GroupState_Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupState_Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupState_Group) ProtoMessage() {}

func (x *GroupState_Group) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupState_Group.ProtoReflect.Descriptor instead.
func (*GroupState_Group) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{14, 0}
}

func (x *GroupState_Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupState_Group) GetReplicas() []*GroupState_Group_Replica {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *GroupState_Group) GetComponents() []string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GroupState_Group) GetListeners() []*protos.Listener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

// Replica stores information about a colocation group replica.
type GroupState_Group_Replica struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaveletAddr   string              `protobuf:"bytes,1,opt,name=weavelet_addr,json=weaveletAddr,proto3" json:"weavelet_addr,omitempty"`                            // Weavelet address.
	BabysitterAddr string              `protobuf:"bytes,2,opt,name=babysitter_addr,json=babysitterAddr,proto3" json:"babysitter_addr,omitempty"`                      // Babysitter address.
	HealthStatus   protos.HealthStatus `protobuf:"varint,3,opt,name=health_status,json=healthStatus,proto3,enum=runtime.HealthStatus" json:"health_status,omitempty"` // Health status.
}

func (x *GroupState_Group_Replica) Reset() {
	*x = GroupState_Group_Replica{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_nanny_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupState_Group_Replica) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupState_Group_Replica) ProtoMessage() {}

func (x *GroupState_Group_Replica) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_nanny_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupState_Group_Replica.ProtoReflect.Descriptor instead.
func (*GroupState_Group_Replica) Descriptor() ([]byte, []int) {
	return file_internal_nanny_nanny_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *GroupState_Group_Replica) GetWeaveletAddr() string {
	if x != nil {
		return x.WeaveletAddr
	}
	return ""
}

func (x *GroupState_Group_Replica) GetBabysitterAddr() string {
	if x != nil {
		return x.BabysitterAddr
	}
	return ""
}

func (x *GroupState_Group_Replica) GetHealthStatus() protos.HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return protos.HealthStatus_UNKNOWN
}

var File_internal_nanny_nanny_proto protoreflect.FileDescriptor

var file_internal_nanny_nanny_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6e, 0x61,
	0x6e, 0x6e, 0x79, 0x1a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1c, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7a, 0x0a, 0x1e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x08,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69,
	0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0x9a, 0x01, 0x0a, 0x1a,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x66, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x6e, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x46, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x92, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x6c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x78, 0x0a, 0x1b, 0x43, 0x6f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x29, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x4b,
	0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x68, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4f, 0x0a, 0x16, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x18, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93, 0x01,
	0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x54, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x12, 0x62, 0x61, 0x62, 0x79, 0x73, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x62, 0x79,
	0x73, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x54, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x22, 0x41, 0x0a, 0x24, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x91, 0x01, 0x0a, 0x1d, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x74, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x45, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x41, 0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xf6, 0x01, 0x0a, 0x19, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x41, 0x74, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x1a,
	0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x6f,
	0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x72, 0x6f, 0x6c, 0x6c, 0x6f, 0x75, 0x74, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x22, 0x4d, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x97, 0x03, 0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0xbf, 0x02, 0x0a, 0x05, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x61, 0x6e,
	0x6e, 0x79, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x52, 0x08, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x65, 0x72, 0x73, 0x1a, 0x93, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65, 0x61, 0x76, 0x65, 0x6c, 0x65, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x76, 0x65,
	0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x61, 0x62, 0x79, 0x73,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x61, 0x62, 0x79, 0x73, 0x69, 0x74, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x3a, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a, 0x08,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x6e, 0x12, 0x31, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x61,
	0x6e, 0x6e, 0x79, 0x2e, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x09, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x0c, 0x46,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x35, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x66, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x94, 0x01,
	0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x66, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x6e, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x44,
	0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x55, 0x0a, 0x0f, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x66,
	0x66, 0x69, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x5f, 0x0a, 0x13, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x61, 0x6e, 0x6e,
	0x79, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x73, 0x73,
	0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x49, 0x0a, 0x15, 0x48, 0x6f, 0x73, 0x74, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x61,
	0x6e, 0x6e, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x73, 0x22, 0xc3, 0x01,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x5f, 0x66, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x46, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x65,
	0x6e, 0x65, 0x72, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2f,
	0x77, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2d, 0x67, 0x6b, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_nanny_nanny_proto_rawDescOnce sync.Once
	file_internal_nanny_nanny_proto_rawDescData = file_internal_nanny_nanny_proto_rawDesc
)

func file_internal_nanny_nanny_proto_rawDescGZIP() []byte {
	file_internal_nanny_nanny_proto_rawDescOnce.Do(func() {
		file_internal_nanny_nanny_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_nanny_nanny_proto_rawDescData)
	})
	return file_internal_nanny_nanny_proto_rawDescData
}

var file_internal_nanny_nanny_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_internal_nanny_nanny_proto_goTypes = []interface{}{
	(*ApplicationDistributionRequest)(nil),       // 0: nanny.ApplicationDistributionRequest
	(*VersionDistributionRequest)(nil),           // 1: nanny.VersionDistributionRequest
	(*ApplicationCleanupRequest)(nil),            // 2: nanny.ApplicationCleanupRequest
	(*GetListenerAddressRequest)(nil),            // 3: nanny.GetListenerAddressRequest
	(*ExportListenerRequest)(nil),                // 4: nanny.ExportListenerRequest
	(*ColocationGroupStartRequest)(nil),          // 5: nanny.ColocationGroupStartRequest
	(*ApplicationDeploymentRequest)(nil),         // 6: nanny.ApplicationDeploymentRequest
	(*ApplicationStopRequest)(nil),               // 7: nanny.ApplicationStopRequest
	(*ApplicationDeleteRequest)(nil),             // 8: nanny.ApplicationDeleteRequest
	(*ReplicaToRegister)(nil),                    // 9: nanny.ReplicaToRegister
	(*ApplicationStateAtDistributorRequest)(nil), // 10: nanny.ApplicationStateAtDistributorRequest
	(*ApplicationStateAtDistributor)(nil),        // 11: nanny.ApplicationStateAtDistributor
	(*VersionStateAtDistributor)(nil),            // 12: nanny.VersionStateAtDistributor
	(*GroupStateRequest)(nil),                    // 13: nanny.GroupStateRequest
	(*GroupState)(nil),                           // 14: nanny.GroupState
	(*TargetFn)(nil),                             // 15: nanny.TargetFn
	(*FractionSpec)(nil),                         // 16: nanny.FractionSpec
	(*Schedule)(nil),                             // 17: nanny.Schedule
	(*TrafficAssignment)(nil),                    // 18: nanny.TrafficAssignment
	(*HostTrafficAssignment)(nil),                // 19: nanny.HostTrafficAssignment
	(*TrafficAllocation)(nil),                    // 20: nanny.TrafficAllocation
	(*GroupState_Group)(nil),                     // 21: nanny.GroupState.Group
	(*GroupState_Group_Replica)(nil),             // 22: nanny.GroupState.Group.Replica
	nil,                                          // 23: nanny.TrafficAssignment.HostAssignmentEntry
	(*config.GKEConfig)(nil),                     // 24: config.GKEConfig
	(*protos.ColocationGroup)(nil),               // 25: runtime.ColocationGroup
	(*protos.Listener)(nil),                      // 26: runtime.Listener
	(*protos.ReplicaToRegister)(nil),             // 27: runtime.ReplicaToRegister
	(*durationpb.Duration)(nil),                  // 28: google.protobuf.Duration
	(protos.HealthStatus)(0),                     // 29: runtime.HealthStatus
}
var file_internal_nanny_nanny_proto_depIdxs = []int32{
	1,  // 0: nanny.ApplicationDistributionRequest.requests:type_name -> nanny.VersionDistributionRequest
	24, // 1: nanny.VersionDistributionRequest.config:type_name -> config.GKEConfig
	15, // 2: nanny.VersionDistributionRequest.target_fn:type_name -> nanny.TargetFn
	25, // 3: nanny.GetListenerAddressRequest.group:type_name -> runtime.ColocationGroup
	24, // 4: nanny.GetListenerAddressRequest.config:type_name -> config.GKEConfig
	25, // 5: nanny.ExportListenerRequest.group:type_name -> runtime.ColocationGroup
	26, // 6: nanny.ExportListenerRequest.listener:type_name -> runtime.Listener
	24, // 7: nanny.ExportListenerRequest.config:type_name -> config.GKEConfig
	25, // 8: nanny.ColocationGroupStartRequest.group:type_name -> runtime.ColocationGroup
	24, // 9: nanny.ColocationGroupStartRequest.config:type_name -> config.GKEConfig
	24, // 10: nanny.ApplicationDeploymentRequest.versions:type_name -> config.GKEConfig
	27, // 11: nanny.ReplicaToRegister.replica:type_name -> runtime.ReplicaToRegister
	12, // 12: nanny.ApplicationStateAtDistributor.version_state:type_name -> nanny.VersionStateAtDistributor
	14, // 13: nanny.VersionStateAtDistributor.groups:type_name -> nanny.GroupState
	21, // 14: nanny.GroupState.groups:type_name -> nanny.GroupState.Group
	16, // 15: nanny.TargetFn.fractions:type_name -> nanny.FractionSpec
	28, // 16: nanny.FractionSpec.duration:type_name -> google.protobuf.Duration
	15, // 17: nanny.Schedule.target_fn:type_name -> nanny.TargetFn
	28, // 18: nanny.Schedule.applied_duration:type_name -> google.protobuf.Duration
	23, // 19: nanny.TrafficAssignment.host_assignment:type_name -> nanny.TrafficAssignment.HostAssignmentEntry
	20, // 20: nanny.HostTrafficAssignment.allocs:type_name -> nanny.TrafficAllocation
	26, // 21: nanny.TrafficAllocation.listener:type_name -> runtime.Listener
	22, // 22: nanny.GroupState.Group.replicas:type_name -> nanny.GroupState.Group.Replica
	26, // 23: nanny.GroupState.Group.listeners:type_name -> runtime.Listener
	29, // 24: nanny.GroupState.Group.Replica.health_status:type_name -> runtime.HealthStatus
	19, // 25: nanny.TrafficAssignment.HostAssignmentEntry.value:type_name -> nanny.HostTrafficAssignment
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_internal_nanny_nanny_proto_init() }
func file_internal_nanny_nanny_proto_init() {
	if File_internal_nanny_nanny_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_nanny_nanny_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionDistributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCleanupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListenerAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportListenerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColocationGroupStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStopRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicaToRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStateAtDistributorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStateAtDistributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionStateAtDistributor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TargetFn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FractionSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Schedule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostTrafficAssignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficAllocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupState_Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_nanny_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupState_Group_Replica); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_nanny_nanny_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_nanny_nanny_proto_goTypes,
		DependencyIndexes: file_internal_nanny_nanny_proto_depIdxs,
		MessageInfos:      file_internal_nanny_nanny_proto_msgTypes,
	}.Build()
	File_internal_nanny_nanny_proto = out.File
	file_internal_nanny_nanny_proto_rawDesc = nil
	file_internal_nanny_nanny_proto_goTypes = nil
	file_internal_nanny_nanny_proto_depIdxs = nil
}
