// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: internal/nanny/distributor/distributor.proto

package distributor

import (
	config "github.com/ServiceWeaver/weaver-gke/internal/config"
	nanny "github.com/ServiceWeaver/weaver-gke/internal/nanny"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppVersionState_Status int32

const (
	AppVersionState_STARTING AppVersionState_Status = 0 // should be started
	AppVersionState_STARTED  AppVersionState_Status = 1 // has started
	AppVersionState_STOPPING AppVersionState_Status = 2 // should be stopped
	AppVersionState_STOPPED  AppVersionState_Status = 3 // has been stopped; should be deleted after a delay
)

// Enum value maps for AppVersionState_Status.
var (
	AppVersionState_Status_name = map[int32]string{
		0: "STARTING",
		1: "STARTED",
		2: "STOPPING",
		3: "STOPPED",
	}
	AppVersionState_Status_value = map[string]int32{
		"STARTING": 0,
		"STARTED":  1,
		"STOPPING": 2,
		"STOPPED":  3,
	}
)

func (x AppVersionState_Status) Enum() *AppVersionState_Status {
	p := new(AppVersionState_Status)
	*p = x
	return p
}

func (x AppVersionState_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppVersionState_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_nanny_distributor_distributor_proto_enumTypes[0].Descriptor()
}

func (AppVersionState_Status) Type() protoreflect.EnumType {
	return &file_internal_nanny_distributor_distributor_proto_enumTypes[0]
}

func (x AppVersionState_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppVersionState_Status.Descriptor instead.
func (AppVersionState_Status) EnumDescriptor() ([]byte, []int) {
	return file_internal_nanny_distributor_distributor_proto_rawDescGZIP(), []int{1, 0}
}

// AppState contains the state managed for an application by the distributor.
type AppState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Application versions, sorted by submission time.
	Versions []*AppVersionState `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	// Deployment ids of deleted versions.
	DeletedVersions []string `protobuf:"bytes,3,rep,name=deleted_versions,json=deletedVersions,proto3" json:"deleted_versions,omitempty"`
}

func (x *AppState) Reset() {
	*x = AppState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppState) ProtoMessage() {}

func (x *AppState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppState.ProtoReflect.Descriptor instead.
func (*AppState) Descriptor() ([]byte, []int) {
	return file_internal_nanny_distributor_distributor_proto_rawDescGZIP(), []int{0}
}

func (x *AppState) GetVersions() []*AppVersionState {
	if x != nil {
		return x.Versions
	}
	return nil
}

func (x *AppState) GetDeletedVersions() []string {
	if x != nil {
		return x.DeletedVersions
	}
	return nil
}

// AppVersionState contains the state managed for an application version by
// the distributor.
type AppVersionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deployment information.
	Config *config.GKEConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// Rollout information.
	Schedule *nanny.Schedule `protobuf:"bytes,2,opt,name=schedule,proto3" json:"schedule,omitempty"`
	// Unique identifier that captures the order in which the application version
	// was submitted for rollout.
	Order int64 `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	// All known Kubernetes ReplicaSets for this application version.
	ReplicaSets *nanny.ReplicaSetState `protobuf:"bytes,4,opt,name=replica_sets,json=replicaSets,proto3" json:"replica_sets,omitempty"`
	// All known listeners for this application version.
	Listeners   []*nanny.Listener      `protobuf:"bytes,7,rep,name=listeners,proto3" json:"listeners,omitempty"`
	Status      AppVersionState_Status `protobuf:"varint,5,opt,name=status,proto3,enum=distributor.AppVersionState_Status" json:"status,omitempty"`
	StoppedTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=stopped_time,json=stoppedTime,proto3" json:"stopped_time,omitempty"` // when the version was stopped
}

func (x *AppVersionState) Reset() {
	*x = AppVersionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppVersionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppVersionState) ProtoMessage() {}

func (x *AppVersionState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppVersionState.ProtoReflect.Descriptor instead.
func (*AppVersionState) Descriptor() ([]byte, []int) {
	return file_internal_nanny_distributor_distributor_proto_rawDescGZIP(), []int{1}
}

func (x *AppVersionState) GetConfig() *config.GKEConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *AppVersionState) GetSchedule() *nanny.Schedule {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *AppVersionState) GetOrder() int64 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *AppVersionState) GetReplicaSets() *nanny.ReplicaSetState {
	if x != nil {
		return x.ReplicaSets
	}
	return nil
}

func (x *AppVersionState) GetListeners() []*nanny.Listener {
	if x != nil {
		return x.Listeners
	}
	return nil
}

func (x *AppVersionState) GetStatus() AppVersionState_Status {
	if x != nil {
		return x.Status
	}
	return AppVersionState_STARTING
}

func (x *AppVersionState) GetStoppedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StoppedTime
	}
	return nil
}

// DistributorState contains the state maintained by the distributor.
type DistributorState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The set of all applications.
	Applications []string `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	// The latest traffic assignment for public listeners.
	PublicTrafficAssignment *nanny.TrafficAssignment `protobuf:"bytes,2,opt,name=public_traffic_assignment,json=publicTrafficAssignment,proto3" json:"public_traffic_assignment,omitempty"`
	// The latest traffic assignment for private listeners.
	PrivateTrafficAssignment *nanny.TrafficAssignment `protobuf:"bytes,4,opt,name=private_traffic_assignment,json=privateTrafficAssignment,proto3" json:"private_traffic_assignment,omitempty"`
}

func (x *DistributorState) Reset() {
	*x = DistributorState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DistributorState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributorState) ProtoMessage() {}

func (x *DistributorState) ProtoReflect() protoreflect.Message {
	mi := &file_internal_nanny_distributor_distributor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributorState.ProtoReflect.Descriptor instead.
func (*DistributorState) Descriptor() ([]byte, []int) {
	return file_internal_nanny_distributor_distributor_proto_rawDescGZIP(), []int{2}
}

func (x *DistributorState) GetApplications() []string {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *DistributorState) GetPublicTrafficAssignment() *nanny.TrafficAssignment {
	if x != nil {
		return x.PublicTrafficAssignment
	}
	return nil
}

func (x *DistributorState) GetPrivateTrafficAssignment() *nanny.TrafficAssignment {
	if x != nil {
		return x.PrivateTrafficAssignment
	}
	return nil
}

var File_internal_nanny_distributor_distributor_proto protoreflect.FileDescriptor

var file_internal_nanny_distributor_distributor_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x6f, 0x72, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xa5, 0x03, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x72, 0x65, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f,
	0x72, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x3e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x52, 0x54,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x03, 0x22,
	0xe4, 0x01, 0x0a, 0x10, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x19, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x61,
	0x6e, 0x6e, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x17, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x54, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x56,
	0x0a, 0x1a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x18, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x65, 0x61, 0x76,
	0x65, 0x72, 0x2f, 0x77, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2d, 0x67, 0x6b, 0x65, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x6e, 0x61, 0x6e, 0x6e, 0x79, 0x2f, 0x64, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_nanny_distributor_distributor_proto_rawDescOnce sync.Once
	file_internal_nanny_distributor_distributor_proto_rawDescData = file_internal_nanny_distributor_distributor_proto_rawDesc
)

func file_internal_nanny_distributor_distributor_proto_rawDescGZIP() []byte {
	file_internal_nanny_distributor_distributor_proto_rawDescOnce.Do(func() {
		file_internal_nanny_distributor_distributor_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_nanny_distributor_distributor_proto_rawDescData)
	})
	return file_internal_nanny_distributor_distributor_proto_rawDescData
}

var file_internal_nanny_distributor_distributor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_nanny_distributor_distributor_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_internal_nanny_distributor_distributor_proto_goTypes = []interface{}{
	(AppVersionState_Status)(0),     // 0: distributor.AppVersionState.Status
	(*AppState)(nil),                // 1: distributor.AppState
	(*AppVersionState)(nil),         // 2: distributor.AppVersionState
	(*DistributorState)(nil),        // 3: distributor.DistributorState
	(*config.GKEConfig)(nil),        // 4: config.GKEConfig
	(*nanny.Schedule)(nil),          // 5: nanny.Schedule
	(*nanny.ReplicaSetState)(nil),   // 6: nanny.ReplicaSetState
	(*nanny.Listener)(nil),          // 7: nanny.Listener
	(*timestamppb.Timestamp)(nil),   // 8: google.protobuf.Timestamp
	(*nanny.TrafficAssignment)(nil), // 9: nanny.TrafficAssignment
}
var file_internal_nanny_distributor_distributor_proto_depIdxs = []int32{
	2, // 0: distributor.AppState.versions:type_name -> distributor.AppVersionState
	4, // 1: distributor.AppVersionState.config:type_name -> config.GKEConfig
	5, // 2: distributor.AppVersionState.schedule:type_name -> nanny.Schedule
	6, // 3: distributor.AppVersionState.replica_sets:type_name -> nanny.ReplicaSetState
	7, // 4: distributor.AppVersionState.listeners:type_name -> nanny.Listener
	0, // 5: distributor.AppVersionState.status:type_name -> distributor.AppVersionState.Status
	8, // 6: distributor.AppVersionState.stopped_time:type_name -> google.protobuf.Timestamp
	9, // 7: distributor.DistributorState.public_traffic_assignment:type_name -> nanny.TrafficAssignment
	9, // 8: distributor.DistributorState.private_traffic_assignment:type_name -> nanny.TrafficAssignment
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_internal_nanny_distributor_distributor_proto_init() }
func file_internal_nanny_distributor_distributor_proto_init() {
	if File_internal_nanny_distributor_distributor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_nanny_distributor_distributor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_distributor_distributor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppVersionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_nanny_distributor_distributor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DistributorState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_nanny_distributor_distributor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_nanny_distributor_distributor_proto_goTypes,
		DependencyIndexes: file_internal_nanny_distributor_distributor_proto_depIdxs,
		EnumInfos:         file_internal_nanny_distributor_distributor_proto_enumTypes,
		MessageInfos:      file_internal_nanny_distributor_distributor_proto_msgTypes,
	}.Build()
	File_internal_nanny_distributor_distributor_proto = out.File
	file_internal_nanny_distributor_distributor_proto_rawDesc = nil
	file_internal_nanny_distributor_distributor_proto_goTypes = nil
	file_internal_nanny_distributor_distributor_proto_depIdxs = nil
}
