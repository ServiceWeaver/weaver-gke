// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: gke/internal/proto/test/test.proto

package proto_test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Computer represents a personal computer.
type Computer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Motherboard component of the computer.
	Motherboard *Motherboard `protobuf:"bytes,1,opt,name=motherboard,proto3" json:"motherboard,omitempty"`
}

func (x *Computer) Reset() {
	*x = Computer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Computer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Computer) ProtoMessage() {}

func (x *Computer) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Computer.ProtoReflect.Descriptor instead.
func (*Computer) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{0}
}

func (x *Computer) GetMotherboard() *Motherboard {
	if x != nil {
		return x.Motherboard
	}
	return nil
}

// Motherboard represents a computer motherboard.
type Motherboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chipset     string    `protobuf:"bytes,1,opt,name=chipset,proto3" json:"chipset,omitempty"`                            // Motherboard chipset.
	MemorySlots []*Memory `protobuf:"bytes,2,rep,name=memory_slots,json=memorySlots,proto3" json:"memory_slots,omitempty"` // Motherboard memory slots.
	Cpu         *CPU      `protobuf:"bytes,3,opt,name=cpu,proto3" json:"cpu,omitempty"`                                    // CPU attached to the motherboard.
}

func (x *Motherboard) Reset() {
	*x = Motherboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Motherboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Motherboard) ProtoMessage() {}

func (x *Motherboard) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Motherboard.ProtoReflect.Descriptor instead.
func (*Motherboard) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{1}
}

func (x *Motherboard) GetChipset() string {
	if x != nil {
		return x.Chipset
	}
	return ""
}

func (x *Motherboard) GetMemorySlots() []*Memory {
	if x != nil {
		return x.MemorySlots
	}
	return nil
}

func (x *Motherboard) GetCpu() *CPU {
	if x != nil {
		return x.Cpu
	}
	return nil
}

// Memory represents computer memory.
type Memory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer string        `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"` // Memory manufacturer.
	Chips        []*MemoryChip `protobuf:"bytes,2,rep,name=chips,proto3" json:"chips,omitempty"`               // Memory chips.
}

func (x *Memory) Reset() {
	*x = Memory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Memory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Memory) ProtoMessage() {}

func (x *Memory) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Memory.ProtoReflect.Descriptor instead.
func (*Memory) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{2}
}

func (x *Memory) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *Memory) GetChips() []*MemoryChip {
	if x != nil {
		return x.Chips
	}
	return nil
}

// MemoryChip represents a computer memory chip that appears on a memory card.
type MemoryChip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer  string `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`                         // Memory chip manufacturer.
	CapacityBytes int64  `protobuf:"varint,2,opt,name=capacity_bytes,json=capacityBytes,proto3" json:"capacity_bytes,omitempty"` // Memory chip capacity, in bytes.
}

func (x *MemoryChip) Reset() {
	*x = MemoryChip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryChip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryChip) ProtoMessage() {}

func (x *MemoryChip) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryChip.ProtoReflect.Descriptor instead.
func (*MemoryChip) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{3}
}

func (x *MemoryChip) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *MemoryChip) GetCapacityBytes() int64 {
	if x != nil {
		return x.CapacityBytes
	}
	return 0
}

// CPU represent a computer central processing unit.
type CPU struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model string              `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`                                                                                         // CPU model.
	Cores map[string]*CPUCore `protobuf:"bytes,4,rep,name=cores,proto3" json:"cores,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Map from core label to CPU core
}

func (x *CPU) Reset() {
	*x = CPU{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPU) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPU) ProtoMessage() {}

func (x *CPU) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPU.ProtoReflect.Descriptor instead.
func (*CPU) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{4}
}

func (x *CPU) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CPU) GetCores() map[string]*CPUCore {
	if x != nil {
		return x.Cores
	}
	return nil
}

// CPUCore represents a core inside a CPU.
type CPUCore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinMhz         int32 `protobuf:"varint,1,opt,name=min_mhz,json=minMhz,proto3" json:"min_mhz,omitempty"`                           // Minimum core clock.
	MaxMhz         int32 `protobuf:"varint,2,opt,name=max_mhz,json=maxMhz,proto3" json:"max_mhz,omitempty"`                           // Maximum core clock.
	CacheSizeBytes int64 `protobuf:"varint,3,opt,name=cache_size_bytes,json=cacheSizeBytes,proto3" json:"cache_size_bytes,omitempty"` // L1 Cache size for the core, in bytes.
}

func (x *CPUCore) Reset() {
	*x = CPUCore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gke_internal_proto_test_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CPUCore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUCore) ProtoMessage() {}

func (x *CPUCore) ProtoReflect() protoreflect.Message {
	mi := &file_gke_internal_proto_test_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUCore.ProtoReflect.Descriptor instead.
func (*CPUCore) Descriptor() ([]byte, []int) {
	return file_gke_internal_proto_test_test_proto_rawDescGZIP(), []int{5}
}

func (x *CPUCore) GetMinMhz() int32 {
	if x != nil {
		return x.MinMhz
	}
	return 0
}

func (x *CPUCore) GetMaxMhz() int32 {
	if x != nil {
		return x.MaxMhz
	}
	return 0
}

func (x *CPUCore) GetCacheSizeBytes() int64 {
	if x != nil {
		return x.CacheSizeBytes
	}
	return 0
}

var File_gke_internal_proto_test_test_proto protoreflect.FileDescriptor

var file_gke_internal_proto_test_test_proto_rawDesc = []byte{
	0x0a, 0x22, 0x67, 0x6b, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74,
	0x22, 0x45, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0b,
	0x6d, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x0b, 0x6d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x0b, 0x4d, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x69, 0x70, 0x73,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x69, 0x70, 0x73, 0x65,
	0x74, 0x12, 0x35, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x52, 0x0b, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x03, 0x63, 0x70, 0x75, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x2e, 0x43, 0x50, 0x55, 0x52, 0x03, 0x63, 0x70, 0x75, 0x22, 0x5a, 0x0a, 0x06, 0x4d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x63, 0x68, 0x69,
	0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x68, 0x69, 0x70,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x70, 0x73, 0x22, 0x57, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x43, 0x68, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x22, 0x9c, 0x01, 0x0a, 0x03, 0x43, 0x50, 0x55, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x50, 0x55, 0x2e, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x1a, 0x4d, 0x0a, 0x0a, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x50, 0x55,
	0x43, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x65, 0x0a, 0x07, 0x43, 0x50, 0x55, 0x43, 0x6f, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69,
	0x6e, 0x5f, 0x6d, 0x68, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e,
	0x4d, 0x68, 0x7a, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x68, 0x7a, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4d, 0x68, 0x7a, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x4d, 0x5a, 0x4b, 0x74, 0x65, 0x61, 0x6d, 0x2e, 0x67,
	0x69, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x70, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x69, 0x6e, 0x67, 0x6f, 0x2d, 0x74, 0x65, 0x61, 0x6d, 0x2f, 0x64, 0x69,
	0x6e, 0x67, 0x6f, 0x2e, 0x67, 0x69, 0x74, 0x2f, 0x67, 0x6b, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gke_internal_proto_test_test_proto_rawDescOnce sync.Once
	file_gke_internal_proto_test_test_proto_rawDescData = file_gke_internal_proto_test_test_proto_rawDesc
)

func file_gke_internal_proto_test_test_proto_rawDescGZIP() []byte {
	file_gke_internal_proto_test_test_proto_rawDescOnce.Do(func() {
		file_gke_internal_proto_test_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_gke_internal_proto_test_test_proto_rawDescData)
	})
	return file_gke_internal_proto_test_test_proto_rawDescData
}

var file_gke_internal_proto_test_test_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gke_internal_proto_test_test_proto_goTypes = []interface{}{
	(*Computer)(nil),    // 0: proto_test.Computer
	(*Motherboard)(nil), // 1: proto_test.Motherboard
	(*Memory)(nil),      // 2: proto_test.Memory
	(*MemoryChip)(nil),  // 3: proto_test.MemoryChip
	(*CPU)(nil),         // 4: proto_test.CPU
	(*CPUCore)(nil),     // 5: proto_test.CPUCore
	nil,                 // 6: proto_test.CPU.CoresEntry
}
var file_gke_internal_proto_test_test_proto_depIdxs = []int32{
	1, // 0: proto_test.Computer.motherboard:type_name -> proto_test.Motherboard
	2, // 1: proto_test.Motherboard.memory_slots:type_name -> proto_test.Memory
	4, // 2: proto_test.Motherboard.cpu:type_name -> proto_test.CPU
	3, // 3: proto_test.Memory.chips:type_name -> proto_test.MemoryChip
	6, // 4: proto_test.CPU.cores:type_name -> proto_test.CPU.CoresEntry
	5, // 5: proto_test.CPU.CoresEntry.value:type_name -> proto_test.CPUCore
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_gke_internal_proto_test_test_proto_init() }
func file_gke_internal_proto_test_test_proto_init() {
	if File_gke_internal_proto_test_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gke_internal_proto_test_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Computer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gke_internal_proto_test_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Motherboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gke_internal_proto_test_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Memory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gke_internal_proto_test_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryChip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gke_internal_proto_test_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPU); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gke_internal_proto_test_test_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CPUCore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gke_internal_proto_test_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gke_internal_proto_test_test_proto_goTypes,
		DependencyIndexes: file_gke_internal_proto_test_test_proto_depIdxs,
		MessageInfos:      file_gke_internal_proto_test_test_proto_msgTypes,
	}.Build()
	File_gke_internal_proto_test_test_proto = out.File
	file_gke_internal_proto_test_test_proto_rawDesc = nil
	file_gke_internal_proto_test_test_proto_goTypes = nil
	file_gke_internal_proto_test_test_proto_depIdxs = nil
}
