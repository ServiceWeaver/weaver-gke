// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.12
// source: internal/config/config.proto

package config

import (
	protos "github.com/ServiceWeaver/weaver/runtime/protos"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GKEConfig holds configuration information for one execution of a
// Service Weaver application on GKE. Fields are populated from a combination
// of user specified configuration and Service Weaver provided information
// specific to a particular execution.
type GKEConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Cloud project the application should be deployed to. If empty, the
	// project value will be extracted from the active gcloud configuration
	// on the deploying machine.
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Cloud account that should be used to deploy the application. If empty,
	// the account value will be extracted from the active gcloud
	// configuration on the deploying machine.
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// List of unique regions to deploy the application to. Service Weaver will manage the
	// clusters in the given regions.
	//
	// If empty, Service Weaver will pick regions automatically.
	//
	// For a list of Google Cloud regions, see:
	//
	//	https://cloud.google.com/compute/docs/regions-zones
	Regions        []string                    `protobuf:"bytes,3,rep,name=regions,proto3" json:"regions,omitempty"`
	PublicListener []*GKEConfig_PublicListener `protobuf:"bytes,4,rep,name=public_listener,json=publicListener,proto3" json:"public_listener,omitempty"`
	// Address of the manager local to a Service Weaver process. This field is typically
	// filled by the manager, before starting a Service Weaver process.
	ManagerAddr string `protobuf:"bytes,5,opt,name=manager_addr,json=managerAddr,proto3" json:"manager_addr,omitempty"`
	// The URL of the container used to deploy the application (e.g.,
	// us-docker.pkg.dev/my-project/serviceweaver-repo/todo:tag4df65e28), or the
	// empty string if containers are not being used.
	Container  string             `protobuf:"bytes,6,opt,name=container,proto3" json:"container,omitempty"`
	Deployment *protos.Deployment `protobuf:"bytes,7,opt,name=deployment,proto3" json:"deployment,omitempty"`
}

func (x *GKEConfig) Reset() {
	*x = GKEConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_config_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKEConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKEConfig) ProtoMessage() {}

func (x *GKEConfig) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKEConfig.ProtoReflect.Descriptor instead.
func (*GKEConfig) Descriptor() ([]byte, []int) {
	return file_internal_config_config_proto_rawDescGZIP(), []int{0}
}

func (x *GKEConfig) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *GKEConfig) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GKEConfig) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *GKEConfig) GetPublicListener() []*GKEConfig_PublicListener {
	if x != nil {
		return x.PublicListener
	}
	return nil
}

func (x *GKEConfig) GetManagerAddr() string {
	if x != nil {
		return x.ManagerAddr
	}
	return ""
}

func (x *GKEConfig) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *GKEConfig) GetDeployment() *protos.Deployment {
	if x != nil {
		return x.Deployment
	}
	return nil
}

// Publicly accessible HTTP listeners for the application.
//
// Service Weaver applications create HTTP listeners dynamically, i.e., via calls to
// Listener(). Only listeners listed here will be configured to receive
// ingress traffic; all other listeners will be configured only for
// VPC-internal access.
type GKEConfig_PublicListener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the listener. Must match the name the listener is created
	// with in the application binary (i.e., via a call to Listener()).
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Hostname under which the listener will be accessible.
	//
	// The hostname is used for routing ingress traffic to the listener.
	// It is an error to leave this field empty.
	Hostname string `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *GKEConfig_PublicListener) Reset() {
	*x = GKEConfig_PublicListener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_config_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GKEConfig_PublicListener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GKEConfig_PublicListener) ProtoMessage() {}

func (x *GKEConfig_PublicListener) ProtoReflect() protoreflect.Message {
	mi := &file_internal_config_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GKEConfig_PublicListener.ProtoReflect.Descriptor instead.
func (*GKEConfig_PublicListener) Descriptor() ([]byte, []int) {
	return file_internal_config_config_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GKEConfig_PublicListener) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GKEConfig_PublicListener) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

var File_internal_config_config_proto protoreflect.FileDescriptor

var file_internal_config_config_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xdc, 0x02, 0x0a, 0x09, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x49, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x47, 0x4b, 0x45, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x1a, 0x40, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x57, 0x65, 0x61, 0x76, 0x65, 0x72, 0x2f, 0x77,
	0x65, 0x61, 0x76, 0x65, 0x72, 0x2d, 0x67, 0x6b, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_internal_config_config_proto_rawDescOnce sync.Once
	file_internal_config_config_proto_rawDescData = file_internal_config_config_proto_rawDesc
)

func file_internal_config_config_proto_rawDescGZIP() []byte {
	file_internal_config_config_proto_rawDescOnce.Do(func() {
		file_internal_config_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_config_config_proto_rawDescData)
	})
	return file_internal_config_config_proto_rawDescData
}

var file_internal_config_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_internal_config_config_proto_goTypes = []interface{}{
	(*GKEConfig)(nil),                // 0: config.GKEConfig
	(*GKEConfig_PublicListener)(nil), // 1: config.GKEConfig.PublicListener
	(*protos.Deployment)(nil),        // 2: runtime.Deployment
}
var file_internal_config_config_proto_depIdxs = []int32{
	1, // 0: config.GKEConfig.public_listener:type_name -> config.GKEConfig.PublicListener
	2, // 1: config.GKEConfig.deployment:type_name -> runtime.Deployment
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_internal_config_config_proto_init() }
func file_internal_config_config_proto_init() {
	if File_internal_config_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_config_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKEConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_config_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GKEConfig_PublicListener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_config_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_config_config_proto_goTypes,
		DependencyIndexes: file_internal_config_config_proto_depIdxs,
		MessageInfos:      file_internal_config_config_proto_msgTypes,
	}.Build()
	File_internal_config_config_proto = out.File
	file_internal_config_config_proto_rawDesc = nil
	file_internal_config_config_proto_goTypes = nil
	file_internal_config_config_proto_depIdxs = nil
}
